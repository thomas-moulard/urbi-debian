#! /usr/bin/env python

import re
import sys
import ast, tools

if len(sys.argv) != 2:
  tools.error ("Usage: .. SRCDIR")
srcdir = sys.argv[1]

## Abstract syntax tree C++ Makefile.am ---------------------------------------
loader = ast.Loader ()
nodes, ast_params = loader.load (sys.stdin)

# Output the files in an indented way: subclasses are more indented
# than super classes.  When there is multiple inheritance, consider
# only the first super class.

basedir = ast_params['ast_basedir']

mk = file("ast-nodes.mk.tmp",  "w")
print >>mk, "AST_NODES =",
arr = nodes.values ()
arr.sort (lambda x, y: cmp(x.name, y.name))
for node in arr:
  files =       basedir + node.fname ("hh") + \
	  " " + basedir + node.fname ("hxx") + \
	  " " + basedir + node.fname ("cc")

  print >>mk, " \\\n  " + files,
print >>mk

mk.close()
tools.lazy_install (srcdir, "ast-nodes.mk")
