# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Use autom4te to create our scripts, with additions stored in
# $(top_srcdir)/build-aux.  Extend m4sh_scripts.





VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_bin_SCRIPTS) $(dist_noinst_DATA) \
	$(dist_noinst_SCRIPTS) $(include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/examples/local.mk $(srcdir)/liburbi/local.mk \
	$(srcdir)/uobjects/local.mk $(top_srcdir)/build-aux/check.mk \
	$(top_srcdir)/build-aux/init.mk \
	$(top_srcdir)/build-aux/libport.mk \
	$(top_srcdir)/build-aux/m4sh.mk \
	$(top_srcdir)/src/urbi/uobjects.mk
bin_PROGRAMS =
EXTRA_PROGRAMS = $(am__EXEEXT_1)
@HAVE_ORTP_TRUE@am__append_1 = rtp
@HAVE_ORTP_TRUE@@WIN32_TRUE@am__append_2 = -lwinmm
subdir = src/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/sdk/urbi-sdk.m4 \
	$(top_srcdir)/build-aux/acx_pthread.m4 \
	$(top_srcdir)/build-aux/boost.m4 \
	$(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/m4-after.m4 \
	$(top_srcdir)/build-aux/package-version.m4 \
	$(top_srcdir)/build-aux/pthread-sources.m4 \
	$(top_srcdir)/build-aux/require-progs.m4 \
	$(top_srcdir)/build-aux/shlibext.m4 \
	$(top_srcdir)/build-aux/swig.m4 \
	$(top_srcdir)/build-aux/urbi-append-flags.m4 \
	$(top_srcdir)/build-aux/urbi-arg-progs.m4 \
	$(top_srcdir)/build-aux/urbi-arg.m4 \
	$(top_srcdir)/build-aux/urbi-boost.m4 \
	$(top_srcdir)/build-aux/urbi-build-aux.m4 \
	$(top_srcdir)/build-aux/urbi-canonical-host.m4 \
	$(top_srcdir)/build-aux/urbi-compilation-mode.m4 \
	$(top_srcdir)/build-aux/urbi-config-scripts.m4 \
	$(top_srcdir)/build-aux/urbi-dirs.m4 \
	$(top_srcdir)/build-aux/urbi-distcheck-configure-flags.m4 \
	$(top_srcdir)/build-aux/urbi-doc.m4 \
	$(top_srcdir)/build-aux/urbi-float-check.m4 \
	$(top_srcdir)/build-aux/urbi-isystem.m4 \
	$(top_srcdir)/build-aux/urbi-lib-suffix.m4 \
	$(top_srcdir)/build-aux/urbi-libport.m4 \
	$(top_srcdir)/build-aux/urbi-libtool.m4 \
	$(top_srcdir)/build-aux/urbi-package-info.m4 \
	$(top_srcdir)/build-aux/urbi-package-kind.m4 \
	$(top_srcdir)/build-aux/urbi-pragma.m4 \
	$(top_srcdir)/build-aux/urbi-prog-cxx.m4 \
	$(top_srcdir)/build-aux/urbi-prog-latex.m4 \
	$(top_srcdir)/build-aux/urbi-pthread.m4 \
	$(top_srcdir)/build-aux/urbi-resolve-dir.m4 \
	$(top_srcdir)/build-aux/urbi-sockets.m4 \
	$(top_srcdir)/build-aux/urbi-ufloat.m4 \
	$(top_srcdir)/build-aux/urbi-win32.m4 \
	$(top_srcdir)/build-aux/warning.m4 \
	$(top_srcdir)/build-aux/xenomai.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/sdk/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__EXEEXT_1 = liburbi/0-empty$(EXEEXT) liburbi/ping$(EXEEXT) \
	liburbi/removecallbacks$(EXEEXT) liburbi/syncvalues$(EXEEXT) \
	liburbi/values$(EXEEXT) liburbi/xfail$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_liburbi_0_empty_OBJECTS = bin/tests.$(OBJEXT) \
	liburbi/0-empty.$(OBJEXT)
liburbi_0_empty_OBJECTS = $(am_liburbi_0_empty_OBJECTS)
liburbi_0_empty_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(top_builddir)/src/liburbi/liburbi$(LIBSFX).la \
	$(top_builddir)/jpeg/libjpeg4urbi$(LIBSFX).la \
	$(am__DEPENDENCIES_1)
liburbi_0_empty_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_liburbi_ping_OBJECTS = bin/tests.$(OBJEXT) liburbi/ping.$(OBJEXT)
liburbi_ping_OBJECTS = $(am_liburbi_ping_OBJECTS)
liburbi_ping_LDADD = $(LDADD)
liburbi_ping_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liburbi_removecallbacks_OBJECTS = bin/tests.$(OBJEXT) \
	liburbi/removecallbacks.$(OBJEXT)
liburbi_removecallbacks_OBJECTS =  \
	$(am_liburbi_removecallbacks_OBJECTS)
liburbi_removecallbacks_LDADD = $(LDADD)
liburbi_removecallbacks_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liburbi_syncvalues_OBJECTS = bin/tests.$(OBJEXT) \
	liburbi/syncvalues.$(OBJEXT)
liburbi_syncvalues_OBJECTS = $(am_liburbi_syncvalues_OBJECTS)
liburbi_syncvalues_LDADD = $(LDADD)
liburbi_syncvalues_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liburbi_values_OBJECTS = bin/tests.$(OBJEXT) \
	liburbi/values.$(OBJEXT)
liburbi_values_OBJECTS = $(am_liburbi_values_OBJECTS)
liburbi_values_LDADD = $(LDADD)
liburbi_values_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liburbi_xfail_OBJECTS = bin/tests.$(OBJEXT) liburbi/xfail.$(OBJEXT)
liburbi_xfail_OBJECTS = $(am_liburbi_xfail_OBJECTS)
liburbi_xfail_LDADD = $(LDADD)
liburbi_xfail_DEPENDENCIES = $(am__DEPENDENCIES_2)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS) \
	$(nodist_bin_SCRIPTS) $(nodist_noinst_SCRIPTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(liburbi_0_empty_SOURCES) $(liburbi_ping_SOURCES) \
	$(liburbi_removecallbacks_SOURCES) \
	$(liburbi_syncvalues_SOURCES) $(liburbi_values_SOURCES) \
	$(liburbi_xfail_SOURCES)
DIST_SOURCES = $(liburbi_0_empty_SOURCES) $(liburbi_ping_SOURCES) \
	$(liburbi_removecallbacks_SOURCES) \
	$(liburbi_syncvalues_SOURCES) $(liburbi_values_SOURCES) \
	$(liburbi_xfail_SOURCES)
DATA = $(dist_noinst_DATA) $(nodist_noinst_DATA) $(noinst_DATA)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
INSTALL_HEADER = @INSTALL_HEADER@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDIR = @BINDIR@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LDFLAGS = @BOOST_DATE_TIME_LDFLAGS@
BOOST_DATE_TIME_LDPATH = @BOOST_DATE_TIME_LDPATH@
BOOST_DATE_TIME_LIBS = @BOOST_DATE_TIME_LIBS@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_ROOT = @BOOST_ROOT@
BOOST_THREAD_LDFLAGS = @BOOST_THREAD_LDFLAGS@
BOOST_THREAD_LDPATH = @BOOST_THREAD_LDPATH@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILATION_MODE_DEBUG = @COMPILATION_MODE_DEBUG@
COMPILATION_MODE_SPACE = @COMPILATION_MODE_SPACE@
COMPILATION_MODE_SPEED = @COMPILATION_MODE_SPEED@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DLMODEXT = @DLMODEXT@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBPORT_BUILDPREFIX = @LIBPORT_BUILDPREFIX@
LIBPORT_SRCDIR = @LIBPORT_SRCDIR@
LIBS = 
LIBSFX = @LIBSFX@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORTP_CFLAGS = @ORTP_CFLAGS@
ORTP_LIBS = @ORTP_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BRAND = @PACKAGE_BRAND@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_COPYRIGHT = @PACKAGE_COPYRIGHT@
PACKAGE_COPYRIGHT_HOLDER = @PACKAGE_COPYRIGHT_HOLDER@
PACKAGE_COPYRIGHT_YEARS = @PACKAGE_COPYRIGHT_YEARS@
PACKAGE_KIND = @PACKAGE_KIND@
PACKAGE_MAJOR = @PACKAGE_MAJOR@
PACKAGE_MINOR = @PACKAGE_MINOR@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PATCHLEVEL = @PACKAGE_PATCHLEVEL@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFCROP = @PDFCROP@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LDFLAGS = @PTHREAD_LDFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PTHREAD_SOURCES = @PTHREAD_SOURCES@
RANLIB = @RANLIB@
SDK_CFLAGS = @SDK_CFLAGS@
SDK_CPPFLAGS = @SDK_CPPFLAGS@
SDK_CXXFLAGS = @SDK_CXXFLAGS@
SDK_LDFLAGS = @SDK_LDFLAGS@
SDK_LIBS = @SDK_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHLIBEXT = @SHLIBEXT@
SOCKETS_LIBS = @SOCKETS_LIBS@
STRIP = @STRIP@
SVN = @SVN@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TC_COMPILER_FLAGS_NAME = @TC_COMPILER_FLAGS_NAME@
TEX4HT = @TEX4HT@
URBI_ENV = @URBI_ENV@
URBI_HOST = @URBI_HOST@
URBI_HOST_COMP = @URBI_HOST_COMP@
URBI_HOST_CPU = @URBI_HOST_CPU@
URBI_HOST_OS = @URBI_HOST_OS@
VERSION = @VERSION@
VISIBILITY_CXXFLAGS = @VISIBILITY_CXXFLAGS@
WARNING_CXXFLAGS = @WARNING_CXXFLAGS@
X11_CPPFLAGS = @X11_CPPFLAGS@
X11_LDADD = @X11_LDADD@
XENOMAI_PATH = @XENOMAI_PATH@
XENOMAI_POSIX_CPPFLAGS = @XENOMAI_POSIX_CPPFLAGS@
XENOMAI_POSIX_LDFLAGS = @XENOMAI_POSIX_LDFLAGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_configure_args = @ac_configure_args@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_cv_distcheck_configure_flags = @ac_cv_distcheck_configure_flags@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
branddir = @branddir@
brandincludedir = @brandincludedir@
brandlibdir = @brandlibdir@
brandlibexecdir = @brandlibexecdir@
brandsharedir = @brandsharedir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
envdir = @envdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kernel_builddir = @kernel_builddir@
kernel_srcdir = @kernel_srcdir@
kerneldir = @kerneldir@
libdir = @libdir@
libdirname = @libdirname@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sdk_remote_builddir = @sdk_remote_builddir@
sdk_remote_srcdir = @sdk_remote_srcdir@
sdkincludedir = @sdkincludedir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
umaindir = @umaindir@
uobjectsdir = @uobjectsdir@
urbi_uobjectsdir = @urbi_uobjectsdir@
urbiincludedir = @urbiincludedir@

# Initialize some common variables so that we can always use +=.  Do
# not initialize TESTS, otherwise Automake sees empty test suites
# everywhere.
AM_CFLAGS = 

# Find libport's sources and config.h.
# Find bin/tests.hh.
# Find urbi/ headers.
AM_CPPFLAGS = $(LIBPORT_CPPFLAGS) -I$(srcdir) -I$(top_srcdir)/include \
	$(BOOST_CPPFLAGS)
AM_CXXFLAGS = $(WARNING_CXXFLAGS)
# We work on C++ only.
AM_DEFAULT_SOURCE_EXT = .cc
# We should not need to report the -rpath to Boost here, since we
# don't depend directly from it (it is liburbi.la which does, via
# libport).  Yet Libtool does not propagate the rpath, so we need it
# here.
AM_LDFLAGS = $(BOOST_THREAD_LDFLAGS) $(PTHREAD_LDFLAGS)
# Require 1.11.1 asap.
# http://lists.gnu.org/archive/html/automake/2009-12/msg00012.html
# Use bzip2 only.
AUTOMAKE_OPTIONS = 1.11 no-dist-gzip dist-bzip2 -Wno-portability \
	subdir-objects -Wno-portability -Wno-override

# Use the wrappers to run the non-installed executables.
BUILDCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT) \
	PATH=$(BUILDCHECK_PATH):$$PATH
BUILT_SOURCES = 
CHECK_CLEANFILES = 
CHECK_ENVIRONMENT = srcdir='$(srcdir)' \
	INSTRUMENTATION=$(INSTRUMENTATION) \
	PACKAGE_NAME='$(PACKAGE_TARNAME)' URBI_SERVER='$(URBI_SERVER)'

# Visual Studio Debugger PDB Files (C++).
# http://msdn2.microsoft.com/en-us/library/yd4f8bd1.aspx.
# Files created by MSVC++ and our cl.exe.

# Files which are not shipped should be cleaned.
CLEANFILES = vc80.pdb $(PROGRAMS:=.auto.*) $(EXTRA_PROGRAMS:=.auto.*) \
	lt-*.obj $(nodist_check_SCRIPTS) $(nodist_noinst_SCRIPTS) \
	$(STAMPS) *.i *.ii *.i.c *.ii.cc $(m4sh_scripts:=.in) \
	$(EXTRA_PROGRAMS)
DISTCLEANFILES = 
EXTRA_DATA = 

# urbi-send

# urbi-sendbin
#EXAMPLES_TESTS += examples/urbi-sendbin

# Does not work, I don't know why :(
#TFAIL_TESTS +=  examples/urbi-sendbin

# urbi-image

# --------------- #
# liburbi-check.  #
# --------------- #

# uobject-check
EXTRA_DIST = $(build_aux_dir)/bin/ls-files $(m4sh_deps) \
	examples/urbi-send.m4sh examples/urbi-sendbin.m4sh \
	examples/urbi-image.m4sh bin/liburbi-check.m4sh \
	bin/uobject-check.m4sh
EXTRA_HEADERS = 
EXTRA_LTLIBRARIES = 
INSTALLCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT) \
	PATH=$(DESTDIR)$(bindir):$$PATH
M4SHFLAGS = -I$(srcdir)/m4sh
MAINTAINERCLEANFILES = 
MOSTLYCLEANFILES = 

# Sometimes it is really convenient to see the output of the
# preprocessor.  But it's a pain to run the command by hand.

# Sometimes, the remaining # lines are a nuisance: the error is not
# reported against the preprocessed file.  And then we also want to
# compile these files, that's why I used extensions that can be
# directly compiled (*.c and *.cc).
SUFFIXES = .i .ii .i.c .ii.cc

# By default, tests are buildcheck.
TESTS_ENVIRONMENT = $(BUILDCHECK_ENVIRONMENT)
TFAIL_TESTS = 

# This is on purpose, see xfail.cc.
XFAIL_TESTS = liburbi/xfail$(EXEEXT)
dist_bin_SCRIPTS = 
dist_noinst_DATA = 
dist_noinst_SCRIPTS = 
include_HEADERS = 
lib_LTLIBRARIES = 
nodist_bin_SCRIPTS = 
nodist_check_DATA = 
nodist_check_SCRIPTS = examples/urbi-send examples/urbi-sendbin \
	examples/urbi-image bin/liburbi-check bin/uobject-check
nodist_noinst_DATA = 
nodist_noinst_SCRIPTS = $(configured_scripts) bin/urbi-launch$(EXEEXT)
noinst_LTLIBRARIES = 

# Because we use sysexists, which uses 77, we can't use the
# traditional 77 to mean SKIP tests.  Rather, use 176 consistently.
SKIP_STATUS = 176

# Automake still does not honor AM_LDADD.
LDADD = $(AM_LDADD)
build_aux_builddir = $(top_builddir)/build-aux
build_aux_dir = $(build_aux_srcdir)
build_aux_srcdir = $(top_srcdir)/build-aux
move_if_change = $(build_aux_dir)/bin/move-if-change

# Running continuously the test suite is costly, especially for the
# buildfarm.  Some changes have no impact whatsoever on the kernel,
# uconsole etc, for instance changes in the documentation.  In that
# case we would like not to rerun the test suite.  But spelling out
# the exact dependencies (on the libraries, the binaries, the
# wrappers, but also the urbi/*.u files) is hard.  So we create stamp
# files that make it easier to depend on changes of some components.
STAMPS = 
noinst_DATA = $(STAMPS)

# ls_files_in_dir DIR GLOBBING-PATTERNS
# -------------------------------------
# The files in DIR that match the GLOBBING-PATTERNS.
#
# The GLOBBING-PATTERNS are put in single quotes to avoid being
# caught by the shell.
ls_files_in_dir = \
  $(or									   \
    $(shell $(build_aux_dir)/bin/ls-files -s $(1) $(patsubst %,'%',$(2))), \
    $(error ls-files in $(1) returned nothing for: $(2)))


# ls_files GLOBBING-PATTERNS
# --------------------------
# The files in $(srcdir) that match the GLOBBING-PATTERNS.
ls_files = \
  $(call ls_files_in_dir,$(srcdir),$(1))


# make_path REPLACEMENT-PATTERN, DIR...
# -------------------------------------
# Apply REPLACEMENT-PATTERN to each DIR, and join the result with colons.
# For instance:
# (call make_path,foo/%/bar,a b c)
#  => foo/a/bar:foo/b/bar:foo/c/bar
build_aux_empty := 
build_aux_space := $(build_aux_empty) $(build_aux_empty)
make_path = \
  $(subst $(build_aux_space),:,$(patsubst %,$(1),$(2)))

INSTALL_DATA_HOOKS = 
INSTALL_EXEC_HOOKS = 
UNINSTALL_HOOKS = 
TESTS = $(EXAMPLES_TESTS) $(LIBURBI_TESTS) $(UOBJECTS_TESTS)

# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
am__rst_pre = sed 's/^/	/;$${p;g;}'
am__rst_block = sed 's/.*/&::/;$${p;g;}'

# Put stdin (possibly several lines separated by ".  ") in a 123-box.
am__text_box = \
$(AWK) '					\
{						\
  n = split($$0, lines, "\\.  ");		\
  max = 0;					\
  for (i = 1; i <= n; ++i)			\
    if (max < length(lines[i]))			\
      max = length(lines[i]);			\
  ++max;					\
  for (i = 0; i < max + 6 ; ++i)		\
    line = line "-";				\
  format="|   %-" max "s   |\n";		\
  print "." line ".";				\
  for (i = 1; i <= n; ++i)			\
    if (lines[i])				\
      printf format, lines[i] ".";		\
  print "`" line "'"'"'";			\
}'


# Output stdin converting ".  " as ".\n".
am__rst_bullet = \
$(AWK) '					\
{						\
  n = split($$0, lines, "\\.  ");		\
  for (i = 0; i <= n ; ++i)			\
    if (lines[i])				\
      print lines[i] ".";			\
  print "";					\
}'


# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.  Finish by sgr0 to help "set -x" debugging
# return to standard display.
am__tty_colors = \
blu=;						\
grn=;						\
lgn=;						\
red=;						\
std=;						\
ylw=;						\
test "X$(AM_COLOR_TESTS)" != Xno &&		\
test "X$$TERM" != Xdumb &&			\
{						\
  test "X$(AM_COLOR_TESTS)" = Xalways ||	\
  {						\
    test -t 1 2>/dev/null &&			\
    tput bold 1 >/dev/null 2>&1 &&		\
    tput setaf 1 >/dev/null 2>&1 &&		\
    tput sgr0 >/dev/null 2>&1;			\
  }						\
} &&						\
{						\
  blu=$$(tput setaf 4);				\
  grn=$$(tput setaf 2);				\
  lgn=$$(tput bold)$$(tput setaf 2);		\
  red=$$(tput setaf 1);				\
  ylw=$$(tput setaf 3);				\
  std=$$(tput sgr0);				\
}


# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $<, and passes the TESTS_ENVIRONMENT.
am__check_pre = \
$(mkdir_p) "$$(dirname $@)";			\
if test -f ./$<; then dir=./;			\
elif test -f $<; then dir=;			\
else dir="$(srcdir)/"; fi;			\
$(TESTS_ENVIRONMENT)


# To be appended to the command running the test.  Handles the stdout
# and stderr redirection, and catch the exit status.
am__check_post = \
>$@-t 2>&1;					\
estatus=$$?;					\
if test $$estatus -eq 177; then			\
  $(ENABLE_HARD_ERRORS) || estatus=1;		\
fi;						\
$(am__tty_colors);				\
xfailed=PASS;					\
for xfail in : $(XFAIL_TESTS); do		\
  case $< in					\
    $$xfail | */$$xfail) xfailed=XFAIL; break;;	\
  esac;						\
done;						\
for tfail in : $(TFAIL_TESTS); do		\
  case $< in					\
    $$tfail | */$$tfail) xfailed=TFAIL; break;;	\
  esac;						\
done;						\
case $$estatus:$$xfailed in			\
    0:?FAIL)          col=$$red; res=XPASS;;	\
    0:*)              col=$$grn; res=PASS ;;	\
    $(SKIP_STATUS):*) col=$$blu; res=SKIP ;;	\
    $(HARD_STATUS):*) col=$$red; res=FAIL ;;	\
    *:TFAIL)          col=$$ylw; res=TFAIL;;	\
    *:XFAIL)          col=$$lgn; res=XFAIL;;	\
    *:*)              col=$$red; res=FAIL ;;	\
esac;						\
echo "$${col}$$res$${std}: $@";			\
echo "$$res: $@ (exit: $$estatus)" |		\
  $(am__rst_section) >$@;			\
cat $@-t >>$@;					\
rm $@-t

check_programs = \
  $(nodist_check_SCRIPTS)  $(dist_check_SCRIPTS)  $(check_SCRIPTS)	\
  $(nodist_check_PROGRAMS) $(dist_check_PROGRAMS) $(check_PROGRAMS)

TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)

# Get the list of tests that failed.
LIST_FAILED_TEST_LOGS = \
  perl -e 'print join " ",						\
                 grep {open(_) && <_> =~ /^(FAIL|XPASS): /} (@ARGV);'	\
       -- $(TEST_LOGS)

m4sh_scripts = examples/urbi-send examples/urbi-sendbin \
	examples/urbi-image bin/liburbi-check bin/uobject-check
edit = \
 sed									  \
  -e 's|@PACKAGE_NAME[@]|$(PACKAGE_NAME)|g'				  \
  -e 's|@EXEEXT[@]|$(EXEEXT)|g'                                           \
  -e 's|@PACKAGE_TARNAME[@]|$(PACKAGE_TARNAME)|g'			  \
  -e 's|@PERL[@]|$(PERL)|g'						  \
  -e 's|@SHELL[@]|$(SHELL)|g'						  \
  -e 's|@VERSION[@]|$(VERSION)|g'					  \
  -e 's|@abs_builddir[@]|$(abs_builddir)|g'				  \
  -e 's|@abs_srcdir[@]|$(abs_srcdir)|g'					  \
  -e 's|@abs_top_builddir[@]|$(abs_top_builddir)|g'			  \
  -e 's|@abs_top_srcdir[@]|$(abs_top_srcdir)|g'				  \
  -e 's|@bindir[@]|$(bindir)|g'						  \
  -e 's|@builddir[@]|$(builddir)|g'					  \
  -e 's|@configure_input[@]|Generated from $@.in; do not edit by hand.|g' \
  -e 's|@datadir[@]|$(pkgdatadir)|g'					  \
  -e 's|@host[@]|$(host)|g'						  \
  -e 's|@prefix[@]|$(prefix)|g'						  \
  -e 's|@srcdir[@]|$(srcdir)|g'						  \
  -e 's|@top_builddir[@]|$(top_builddir)|g'				  \
  -e 's|@top_srcdir[@]|$(top_srcdir)|g'


# Scripts written in M4sh.
m4sh_deps = \
  $(build_aux_dir)/m4sh/base.m4sh		\
  $(build_aux_dir)/m4sh/rst.m4sh		\
  $(build_aux_dir)/m4sh/instrument.m4sh		\
  $(build_aux_dir)/m4sh/children.m4sh		\
  $(build_aux_dir)/m4sh/urbi.m4sh

AUTOM4TE = autom4te
M4SH = $(AUTOM4TE) --language M4sh
LIBPORT_CPPFLAGS = -I$(LIBPORT_SRCDIR)/include -I$(LIBPORT_BUILDPREFIX)include -I$(LIBPORT_SRCDIR)/libltdl
LIBPORT_LIBS = $(LIBPORT_BUILDPREFIX)lib/libport/libport$(LIBSFX).la
LTDL_CPPFLAGS = -I$(LIBPORT_SRCDIR) -I$(LIBPORT_SRCDIR)/libltdl
LTDL_LIBS = $(LIBPORT_BUILDPREFIX)libltdl/libltdlc.la
SCHED_CPPFLAGS = $(LIBPORT_CPPFLAGS)
SCHED_LIBS = $(LIBPORT_BUILDPREFIX)lib/sched/libsched$(LIBSFX).la
@ENABLE_SERIALIZATION_TRUE@SERIALIZE_CPPFLAGS = $(LIBPORT_CPPFLAGS)
@ENABLE_SERIALIZATION_TRUE@SERIALIZE_LIBS = $(LIBPORT_BUILDPREFIX)lib/serialize/libserialize$(LIBSFX).la
TINYXML_CPPFLAGS = $(LIBPORT_CPPFLAGS)
TINYXML_LIBS = $(LIBPORT_BUILDPREFIX)lib/tinyxml/libtinyxml$(LIBSFX).la
EXAMPLES_TESTS = examples/urbi-send examples/urbi-image

# ---------------- #
# The test suite.  #
# ---------------- #
LIBURBI_TESTS = \
  liburbi/0-empty.cc				\
  liburbi/ping.cc				\
  liburbi/removecallbacks.cc			\
  liburbi/syncvalues.cc				\
  liburbi/values.cc				\
  liburbi/xfail.cc

AM_LDADD = \
  $(top_builddir)/src/liburbi/liburbi$(LIBSFX).la	\
  $(top_builddir)/jpeg/libjpeg4urbi$(LIBSFX).la		\
  $(PTHREAD_LIBS)

liburbi_0_empty_SOURCES = bin/tests.hh bin/tests.cc liburbi/0-empty.cc
liburbi_ping_SOURCES = bin/tests.hh bin/tests.cc liburbi/ping.cc
liburbi_removecallbacks_SOURCES = bin/tests.hh bin/tests.cc liburbi/removecallbacks.cc
liburbi_syncvalues_SOURCES = bin/tests.hh bin/tests.cc liburbi/syncvalues.cc
liburbi_values_SOURCES = bin/tests.hh bin/tests.cc liburbi/values.cc
liburbi_xfail_SOURCES = bin/tests.hh bin/tests.cc liburbi/xfail.cc

# I don't know yet how to avoid this painful list.
UOBJECTS = uaccess uaccess2 uaccess3 uchange all factory generic \
	lib-urbi remote sensor sensor2 subsumption threaded timer \
	ultest $(am__append_1)
@HAVE_ORTP_TRUE@EXTRA_rtp_ldflags = $(ORTP_LIBS) $(am__append_2)
@HAVE_ORTP_TRUE@EXTRA_rtp_cppflags = $(ORTP_CFLAGS)

# Compile each UObject using umake.
UOBJECTS_TESTS = $(addprefix uobjects/, $(UOBJECTS:=.uob))
configured_scripts = \
  bin/umake					\
  bin/umake-link				\
  bin/umake-shared				\
  bin/urbi-send


# By default, instrument the code.
#INSTRUMENTATION = true
URBI_SERVER = urbi-launch$(EXEEXT) --start --

# Find (i) our wrappers, (ii) the examples programs.
BUILDCHECK_PATH = $(abs_builddir)/bin:$(abs_top_builddir)/src/examples
TEST_LOGS = $(addsuffix .log,$(basename $(TESTS)))

# The target run by the buildfarm.
CHECK_BUILDFARM_FLAGS = -j2 AM_COLOR_TESTS=no VERBOSE=1 INSTRUMENTATION=0.2
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .i .ii .i.c .ii.cc .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/init.mk $(top_srcdir)/build-aux/check.mk $(top_srcdir)/build-aux/m4sh.mk $(top_srcdir)/build-aux/libport.mk $(srcdir)/examples/local.mk $(srcdir)/liburbi/local.mk $(srcdir)/uobjects/local.mk $(top_srcdir)/src/urbi/uobjects.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bin/$(am__dirstamp):
	@$(MKDIR_P) bin
	@: > bin/$(am__dirstamp)
bin/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bin/$(DEPDIR)
	@: > bin/$(DEPDIR)/$(am__dirstamp)
bin/tests.$(OBJEXT): bin/$(am__dirstamp) bin/$(DEPDIR)/$(am__dirstamp)
liburbi/$(am__dirstamp):
	@$(MKDIR_P) liburbi
	@: > liburbi/$(am__dirstamp)
liburbi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) liburbi/$(DEPDIR)
	@: > liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/0-empty.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/0-empty$(EXEEXT): $(liburbi_0_empty_OBJECTS) $(liburbi_0_empty_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/0-empty$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_0_empty_OBJECTS) $(liburbi_0_empty_LDADD) $(LIBS)
liburbi/ping.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/ping$(EXEEXT): $(liburbi_ping_OBJECTS) $(liburbi_ping_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/ping$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_ping_OBJECTS) $(liburbi_ping_LDADD) $(LIBS)
liburbi/removecallbacks.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/removecallbacks$(EXEEXT): $(liburbi_removecallbacks_OBJECTS) $(liburbi_removecallbacks_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/removecallbacks$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_removecallbacks_OBJECTS) $(liburbi_removecallbacks_LDADD) $(LIBS)
liburbi/syncvalues.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/syncvalues$(EXEEXT): $(liburbi_syncvalues_OBJECTS) $(liburbi_syncvalues_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/syncvalues$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_syncvalues_OBJECTS) $(liburbi_syncvalues_LDADD) $(LIBS)
liburbi/values.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/values$(EXEEXT): $(liburbi_values_OBJECTS) $(liburbi_values_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/values$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_values_OBJECTS) $(liburbi_values_LDADD) $(LIBS)
liburbi/xfail.$(OBJEXT): liburbi/$(am__dirstamp) \
	liburbi/$(DEPDIR)/$(am__dirstamp)
liburbi/xfail$(EXEEXT): $(liburbi_xfail_OBJECTS) $(liburbi_xfail_DEPENDENCIES) liburbi/$(am__dirstamp)
	@rm -f liburbi/xfail$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(liburbi_xfail_OBJECTS) $(liburbi_xfail_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bin/tests.$(OBJEXT)
	-rm -f liburbi/0-empty.$(OBJEXT)
	-rm -f liburbi/ping.$(OBJEXT)
	-rm -f liburbi/removecallbacks.$(OBJEXT)
	-rm -f liburbi/syncvalues.$(OBJEXT)
	-rm -f liburbi/values.$(OBJEXT)
	-rm -f liburbi/xfail.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@bin/$(DEPDIR)/tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/0-empty.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/removecallbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/syncvalues.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/values.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@liburbi/$(DEPDIR)/xfail.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf liburbi/.libs liburbi/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(nodist_check_SCRIPTS) \
	  $(nodist_check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bin/$(DEPDIR)/$(am__dirstamp)
	-rm -f bin/$(am__dirstamp)
	-rm -f liburbi/$(DEPDIR)/$(am__dirstamp)
	-rm -f liburbi/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf bin/$(DEPDIR) liburbi/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-libLTLIBRARIES install-nodist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-local

maintainer-clean: maintainer-clean-am
	-rm -rf bin/$(DEPDIR) liburbi/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-nodist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: all check check-am install install-am install-data-am \
	install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-data-hook \
	install-dist_binSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_binSCRIPTS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installcheck-local installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS uninstall-hook \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-nodist_binSCRIPTS

.PHONY: stamps
stamps: $(STAMPS)
.c.i:
	$(COMPILE) -E -o $@ $<

.cc.ii:
	$(CXXCOMPILE) -E -o $@ $<
.i.i.c:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@

.ii.ii.cc:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@
install-data-hook: $(INSTALL_DATA_HOOKS)
install-exec-hook: $(INSTALL_EXEC_HOOKS)
uninstall-hook: $(UNINSTALL_HOOKS)

.PHONY check-TESTS: clean-semaphores
clean-semaphores:
	-$(build_aux_dir)/bin/semaphore-clean.sh

# Set this to `false' to disable hard errors.
ENABLE_HARD_ERRORS ?= :

# The exit status denoting a test to skip.
SKIP_STATUS ?= 77
# The exit status denoting a hard error, that cannot be saved by XFAIL.
HARD_STATUS ?= 177

# From a test file to a log file.
# Do not use a regular `.test.log:' rule here, since in that case the
# following rule (without incoming extension) will mask this one.
%.log: %.test $(check_programs)
	@$(am__check_pre) $${dir}$< $(am__check_post)

# The exact same commands, but for programs.
#
# Should be active by default, because it sometimes triggers when in
# should not.  For instance I had foo.chk tests that relied on
# directories with the name, without extensions (foo).  Then Make
# tried to run the directories to produce foo.log, not foo.chk.
#
#%.log: %$(EXEEXT)
#	@$(am__check_pre) $${dir}$< $(am__check_post)

TEST_LOGS ?= $(TESTS:.test=.log)
TEST_SUITE_LOG ?= test-suite.log

.PHONY: am-check-programs
am-check-programs: $(check_programs)

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@results=$$(for f in $(TEST_LOGS); do sed 1q $$f; done);	\
	all=$$(  echo "$$results" | grep -c '^.');			\
	fail=$$( echo "$$results" | grep -c '^FAIL');			\
	pass=$$( echo "$$results" | grep -c '^PASS');			\
	skip=$$( echo "$$results" | grep -c '^SKIP');			\
	tfail=$$(echo "$$results" | grep -c '^TFAIL');			\
	xfail=$$(echo "$$results" | grep -c '^XFAIL');			\
	xpass=$$(echo "$$results" | grep -c '^XPASS');			\
	case fail=$$fail:xpass=$$xpass in				\
	  fail=0:xpass=0)						\
	    msg="The test suite passed.  ";				\
	    exit=true;;							\
	  *)								\
	    msg="The test suite failed.  ";				\
	    exit=false;;						\
	esac;								\
	msg="$$msg   - $$pass/$$all tests passed.  ";			\
	test $$fail -eq 0 ||						\
	  msg="$$msg   - $$fail failures.  ";				\
	test $$xpass -eq 0 ||						\
	  msg="$$msg   - $$xpass unexpected pass.  ";			\
	test $$xfail -eq 0 ||						\
	  msg="$$msg   - $$xfail expected failures.  ";			\
	test $$tfail -eq 0 ||						\
	  msg="$$msg   - $$tfail expected temporary failures.  ";	\
	test $$skip -eq 0 ||						\
	  msg="$$msg   - $$skip skipped tests.  ";			\
	if test "$$exit" = false; then					\
	  {								\
	    echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	      $(am__rst_title);						\
	    echo "$$msg" | $(am__rst_bullet);				\
	    echo "TESTS_ENVIRONMENT" | $(am__rst_block);		\
	    echo "$(TESTS_ENVIRONMENT)" | 				\
	       tr ' ' '\n' | 						\
	       sort |							\
               $(am__rst_pre);						\
	    echo;							\
	    echo ".. contents:: :depth: 2";				\
	    echo;							\
	    for f in $(TEST_LOGS);					\
	    do								\
	      case $$(sed 1q $$f) in					\
	        SKIP:*|PASS:*|XFAIL:*);;				\
	        *) echo; cat $$f;;					\
	      esac;							\
	    done;							\
	  } >$(TEST_SUITE_LOG).tmp;					\
	  mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report it to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	$(am__tty_colors);						\
	if $$exit; then echo $$grn; else echo $$red; fi;		\
	  echo "$$msg" | $(am__text_box);				\
	echo $$std;							\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$$exit

# Run all the tests.
check-TESTS:
	@if test -n '$(LAZY_TEST_SUITE)'; then	\
	  rm -f $(STRICT_TEST_LOGS);		\
	else					\
	  rm -f $(TEST_LOGS);			\
	fi
	@rm -f $(TEST_SUITE_LOG)
	@$(MAKE) $(TEST_SUITE_LOG)

%.html: %.log
	@for r2h in $(RST2HTML) $$RST2HTML rst2html rst2html.py;	\
	do								\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check-TESTS first, and then to convert the result.
# Beware of concurrent executions.  Run "check", not "check-TESTS",
# since the dependencies (check_PROGRAMS and others) are attached to
# the former, not the latter.  And expect "check" to fail.
check-html installcheck-html:
	@target=$$(echo $@ | sed -e 's/-html$$//');		\
	if $(MAKE) $(AM_MAKEFLAGS) $$target; then :; else	\
	  rv=$$?;						\
	  $(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML);		\
	  exit $$rv;						\
	fi

.PHONY: check-html installcheck-html
.PHONY: recheck recheck-html
recheck recheck-html:
	@target=$$(echo $@ | sed -e 's/^re//');			\
	if test -f $(TEST_SUITE_LOG); then			\
	  TESTS=$$($(LIST_FAILED_TEST_LOGS));			\
	  $(MAKE) $(AM_MAKEFLAGS) $$target TESTS="$$TESTS";	\
	else							\
	  $(MAKE) $(AM_MAKEFLAGS) $$target;			\
	fi

check-clean: check-clean-local
	rm -f $(CHECK_CLEANFILES) $(TEST_SUITE_LOG) $(TEST_SUITE_HTML) $(TEST_LOGS)
.PHONY: check-clean check-clean-local
clean-local: check-clean
%.in: %.m4sh $(m4sh_deps)
	$(MKDIR_P) $(dir $@)
	$(M4SH) $(M4SHFLAGS) $(m4sh_deps) $< -o $@

$(m4sh_scripts): %: %.in Makefile
	rm -f $@ $@.tmp
	$(edit) `test -f ./$@.in || echo $(srcdir)/`$@.in >$@.tmp
	chmod +x $@.tmp
	chmod a-w $@.tmp
	mv $@.tmp $@

examples/urbi-send.log: examples/urbi-send
	@$(am__check_pre) $${dir}$< $(am__check_post)

examples/urbi-sendbin.log: examples/urbi-sendbin
	@$(am__check_pre) $${dir}$< $(am__check_post)

examples/urbi-image.log: examples/urbi-image
	@$(am__check_pre) $${dir}$< $(am__check_post)

# From a test file to a log file.
# Do not use a regular `.test.log:' rule here, since in that case the
# following rule (without incoming extension) will mask this one.
$(LIBURBI_TESTS:.cc=.log): %.log: %$(EXEEXT) $(check_programs)
	@$(am__check_pre) bin/liburbi-check $(srcdir)/$* $(am__check_post)
@HAVE_ORTP_TRUE@  urbi/rtp$(DLMODEXT): $(wildcard $(srcdir)/urbi/rtp.uob/*)
@HAVE_ORTP_TRUE@  #use lowercase to avoid confusing automake

# We need to factor this.  .SECONDEXPANSION seems to do what we want,
# but I need to investigate further.
# for i in urbi/**/*uob
# do
#  printf '%s: $(wildcard $(srcdir)/%s/*)\n' ${i%.uob} $i
# done
urbi/all$(DLMODEXT): $(wildcard $(srcdir)/urbi/all.uob/*)
urbi/factory$(DLMODEXT): $(wildcard $(srcdir)/urbi/factory.uob/*)
urbi/generic$(DLMODEXT): $(wildcard $(srcdir)/urbi/generic.uob/*)
urbi/lib-urbi$(DLMODEXT): $(wildcard $(srcdir)/urbi/liburbi.uob/*)
urbi/remote$(DLMODEXT): $(wildcard $(srcdir)/urbi/remote.uob/*)
urbi/sensor$(DLMODEXT): $(wildcard $(srcdir)/urbi/sensor.uob/*)
urbi/sensor2$(DLMODEXT): $(wildcard $(srcdir)/urbi/sensor2.uob/*)
urbi/subsumption$(DLMODEXT): $(wildcard $(srcdir)/urbi/subsumption.uob/*)
urbi/threaded$(DLMODEXT): $(wildcard $(srcdir)/urbi/threaded.uob/*)
urbi/timer$(DLMODEXT): $(wildcard $(srcdir)/urbi/timer.uob/*)
urbi/uaccess$(DLMODEXT): $(wildcard $(srcdir)/urbi/uaccess.uob/*)
urbi/uaccess2$(DLMODEXT): $(wildcard $(srcdir)/urbi/uaccess2.uob/*)
urbi/uaccess3$(DLMODEXT): $(wildcard $(srcdir)/urbi/uaccess3.uob/*)
urbi/uchange$(DLMODEXT): $(wildcard $(srcdir)/urbi/uchange.uob/*)
urbi/ultest$(DLMODEXT): $(wildcard $(srcdir)/urbi/ultest.uob/*)

$(UOBJECTS_TESTS:.uob=.log): uobjects/%.log: $(top_builddir)/src/urbi/%.la bin/uobject-check
	@$(am__check_pre) bin/uobject-check $< $(am__check_post)

.PHONY: check-uobjects
check-uobjects:
	$(MAKE) $(AM_MAKEFLAGS) check TESTS="$(UOBJECTS_TESTS)"

# This is really painful: dependencies on config.status are handled
# only in the top-level Makefile by Automake.  So enforce these
# changes here.  Which basically amounts to duplicating what Automake
# does in the top-level Makefile.
$(configured_scripts): bin/%: $(wildcard $(srcdir)/bin/*.in)
	cd $(top_builddir) && $(SHELL) ./config.status src/tests/$@

bin/urbi-launch$(EXEEXT): bin/urbi-launch.in
	cd $(top_builddir) && $(SHELL) ./config.status --file src/tests/$@:src/tests/$<
	chmod +x $@

# Run the tests with the install-environment.
installcheck-local:
	$(MAKE) $(AM_MAKEFLAGS)					\
	  TESTS_ENVIRONMENT='$$(INSTALLCHECK_ENVIRONMENT)' check

check-clean-local:
	rm -rf $(TEST_LOGS:.log=.dir)
%check-buildfarm:
	$(MAKE) $(AM_MAKEFLAGS) $(CHECK_BUILDFARM_FLAGS) $*check-html

check-TESTS: clean-semaphores

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
