                                                        -*- shell-script -*-
URBI_INIT

# Avoid zombies and preserve debugging information.
cleanup ()
{
  local exit_status=$?

  # Let a second C-c really kill us: restore default traps.
  trap - 0 1 2 13 15

  # In case we were caught by set -e, kill the children.
  children_kill    >>debug
  children_harvest >>debug

  rst_subsection "Debug outputs"
  rst_pre "debug" debug

  # Results: Only for the children that are not actually output.
  local i
  for i in $children
  do
    case $i in
      (*)
	rst_subsection "$i"
	children_report "$i"
	;;
    esac
  done

  case $exit_status in
    (0) exit_status=$(children_status);;
  esac

  error $exit_status "cleanup: exiting $exit_status$(ex_to_string $exit_status)"
}
trap cleanup 0

me=$as_me
medir=$(absolute "$0").dir
mkcd $medir

xrun "--help"    urbi-sendbin$EXEEXT --help
xrun "--version" urbi-sendbin$EXEEXT --version

# Send a file and check the output.

# Leaves trailing files, so run it in subdir.
find_urbi_server

# Start it.
spawn_urbi_server

cat >send-me.u <<EOF
0123456789
EOF

instrument -o client.val --\
   urbi-sendbin$EXEEXT --port-file server.port --quit \
   'var Global.Pass' send-me.u 'my headers'
echo "$instrument_result" >client.cmd
eval "$instrument_result" >client.out 2>client.err &
children_register client

children_wait 10
