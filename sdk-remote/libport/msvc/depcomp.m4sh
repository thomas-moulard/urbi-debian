                                                        -*- shell-script -*-
URBI_INIT

me=$as_me
medir=$(absolute "$0").dir
mkcd $medir

export PATH=$abs_srcdir/msvc:$PATH
set -x
run "--version" cl.exe --version ||
  error $? "cannot run cl.exe"

SHELL='/bin/sh'
depcc=cl.exe
depmode=gcc3
am__include=include
am__quote=
cp $abs_top_srcdir/build-aux/depcomp .
mkdir sub

# The following is largely based on the contents of depend.m4, with
# a few changes, unfortunately.

# ----------------------------------------------------------------------

# Setup a source with many dependencies, because some compilers
# like to wrap large dependency lists on column 80 (with \), and
# we should not choose a depcomp mode which is confused by this.
#
# We need to recreate these files for each test, as the compiler may
# overwrite some of them when testing with obscure command lines.
# This happens at least with the AIX C compiler.
: > sub/conftest.c
for i in 1 2 3 4 5 6; do
  echo '#include "conftst'$i'.h"' >> sub/conftest.c
  # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
  # Solaris 8's {/usr,}/bin/sh.
  touch sub/conftst$i.h
done
echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf


# We check with `-c' and `-o' for the sake of the "dashmstdout"
# mode.  It turns out that the SunPro C++ compiler does not properly
# handle `-M -o', and we need to detect this.
if depmode=$depmode \
   source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
   depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
   $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
     >/dev/null 2>conftest.err &&
   grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
   grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
   grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
   ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
  # icc doesn't choke on unknown options, it will just issue warnings
  # or remarks (even with -Werror).  So we grep stderr for any message
  # that says an option was ignored or not supported.
  # When given -MP, icc 7.0 and 7.1 complain thusly:
  #   icc: Command line warning: ignoring option '-M'; no argument required
  # The diagnosis changed in icc 8.0:
  #   icc: Command line remark: option '-MP' not supported
  if (grep 'ignoring option' conftest.err ||
      grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
    dependencies_compiler_type=$depmode
    break
  fi
fi

# ----------------------------------------------------------------------

test "$dependencies_compiler_type" = gcc3

exit 0
