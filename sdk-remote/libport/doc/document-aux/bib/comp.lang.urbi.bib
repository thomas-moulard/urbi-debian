@Article{baillie.04.ijhr,
  title =        {{URBI}: A Universal Language for Robotic Control},
  author =       {Baillie, Jean-Christophe},
  journal =      {International journal of Humanoid Robotics},
  year =         {2004},
  month =        {October},
  url =
                  {http://cogrob.ensta.fr/papers/humanoid2004-baillie.pdf},
  abstract =     {The recent development of relatively cheap and
                  powerful humanoid and animal-like robots has been
                  accompanied by the development of a variety of
                  softwares, libraries and other interfaces to control
                  the robots. The diversity and complexity of these
                  interfaces can only slow down the development of
                  robotics and we believe that there is a need for a
                  standard which could be universal, powerful and easy
                  to implement. URBI, a Universal Robotic Body
                  Interface, aims at providing the ground for such a
                  standard. It is based on a client/server
                  architecture. The server is running on the robot and
                  accessed by the client, typically via TCP/IP. URBI
                  includes a scripted language used from the client
                  and capable of controlling the joints of the robot
                  or access its sensors, camera, speakers or any
                  accessible part of the machine. We describe here the
                  principles behind URBI and how URBI differs from
                  currently existing solutions, and present its
                  specifications and capabilities using practical
                  examples. We also introduce the URBI C Library which
                  provides a simple and yet powerful way to program a
                  client and to make a full use of the functionalities
                  of URBI. We also give examples of URBI running on an
                  Aibo ERS7 and analyse the performances of this
                  implementation.},
}

@InProceedings{baillie.05.iros,
  title =        {{URBI}: Towards a Universal Robotic Low-Level
                  Programming Language},
  author =       {Baillie, Jean-Christophe},
  booktitle =    {Proceedings of the IEEE/RSJ International Conference
                  on Intelligent Robots and Systems (IROS'05)},
  year =         {2005},
  pages =        {820--825},
  url =          {http://cogrob.ensta.fr/papers/iros05-baillie.pdf},
  abstract =     {The growing diversity and complexity of existing
                  robotic devices like humanoids, animal-like robots
                  or wheeled robots, lead to the development of
                  several incompatible software interfaces to control
                  these robots. We believe that there is a need for a
                  standard which could be universal, powerful and easy
                  to use. The open source project URBI, a Universal
                  Robotic Body Interface, aims at providing the ground
                  for such a standard. It is based on a client/server
                  architecture where the server is running on the
                  robot and accessed by the client, on the robot or
                  remotely via TCP/IP. The URBI language is a scripted
                  language used by the client and capable of
                  controlling the joints of the robot or access its
                  sensors, camera, speakers or any accessible part of
                  the machine. We present in this article an
                  introduction to URBI and we describe how URBI
                  differs from currently existing solutions. As an
                  example making use of URBI-specific features, we
                  present a simple perturbative approach to walk
                  pattern generation, with URBI running on a ERS7 Aibo
                  robot.},
}

@InProceedings{baillie.07.sdir,
  title =        {Design Principles for a Universal Robotic Software
                  Platform and Application to {URBI}},
  author =       {Jean-Christophe Baillie},
  editor =       {Davide Brugali and Christian Schlegel and Issa A.
                  Nesnas and William D. Smart and Alexander Braendle},
  crossref =     {zzz.07.sdir},
  booktitle =    {IEEE ICRA 2007 Workshop on Software Development and
                  Integration in Robotics (SDIR-II)},
  series =       {SDIR-II},
  year =         {2007},
  month =        {April},
  publisher =    {IEEE Robotics and Automation Society},
  location =     {Roma, Italy},
  url =
                  {http://robotics.unibg.it/tcsoft/sdir2007/papers/poster-p1-Baillie.pdf},
  abstract =     {The number of generic robots available today on the
                  market is increasing significantly. While this
                  represents a great opportunity to carry on research
                  using advanced robotic devices, including humanoid
                  robots, there is still a serious limitation: all
                  these robots are totally incompatible in term of
                  software, and they are generally quite hard to
                  program, lacking the proper abstractions and
                  properties needed in robotics. We will present here
                  a discussion on possible design rules for such a
                  universal software platform and review a few already
                  existing platforms with these criteria in mind. We
                  will also introduce the URBI platform which is the
                  result of our effort in an attempt to design a
                  universal platform following these guidelines.},
}

@InProceedings{baillie.08.scpr,
  author =       {Jean-Christophe Baillie and Akim Demaille and
                  Quentin Hocquet and Matthieu Nottale and Samuel
                  Tardieu},
  title =        {The {Urbi} Universal Platform for Robotics},
  year =         {2008},
  booktitle =    {First International Workshop on Standards and Common
                  Platform for Robotics},
  editor =       {Itsuki Noda},
  month =        {November},
  abstract =     {Robots can free humankind from everyday chores,
                  they can entertain us, and even educate our
                  children.  They can carry loads, walk, dance, sing,
                  and express emotions.  Hundreds of different robots
                  are already sold in shops, and complex applications
                  are being developed actively around the globe.  So
                  why are robots so \emph{not} present today?  In our
                  experience the lack of standard in robotics, be it
                  from the hardware or software point of view, makes
                  the development of advanced applications for
                  robotics \emph{un}productive.  This is very similar
                  to the early days of personal computers, until the
                  emerging of sufficiently widespread OS increased the
                  return-on-investment for software development.  The
                  \urbi platform sits on top of the large variety of
                  software and/or hardware components for robotics,
                  and provides the user with a unified, standardized,
                  interface with which complex and portable
                  applications can be developed.  In this paper, with
                  present the \urbi platform and some of its prominent
                  components.  },
  url =
                  {http://monicareggiani.net/simpar2008/StandardPlatform/scpr2008-08-Baillie.pdf},
}

@InProceedings{baillie.10.car,
  author =       {Jean-Christophe Baillie and Akim Demaille and
                  Quentin Hocquet and Matthieu Nottale},
  title =        {{Tag}: Job Control in {urbiscript}},
  year =         {2010},
  booktitle =    {5th National Conference on Control Architecture of
                  Robots},
  editor =       {Noury Bouraqadi},
  month =        {May},
  abstract =     {The Urbi software platform for the development of
                  applications for robots relies heavily on
                  concurrency.  While concurrent programs have existed
                  for decades, there is still no universal consensus
                  for the proper means to control the complexity of
                  parallelism.  This paper presents some innovating
                  features of Urbi: syntactic constructs to support
                  concurrent jobs, and \empg{tags}, used to control
                  them.},
  url =
                  {http://car.ensm-douai.fr/CAR2010/index.php?page=presentations},
}

@Misc{gostai.08.urbilab,
  author =       {Gostai},
  title =        {The {UrbiLab} Remote Control Environment for Robots,
                  Version 1.6},
  howpublished = {\url{http://www.gostai.com/urbilab.html}},
  year =         {2008},
}


@PROCEEDINGS {zzz.07.sdir,
  title =        {Proceedings of the {IEEE} {ICRA} 2007 Workshop on
                  Software Development and Integration in Robotics,
                  Roma, Italy, April 14, 2007 ({SDIR-II})},
  editor =       {Davide Brugali and Christian Schlegel and Issa A.
                  Nesnas and William D. Smartand Alexander Braendle},
  booktitle =    {SDIR-II},
  year =         {2007},
  month =        {April},
  publisher =    {IEEE Robotics and Automation Society},
  address =      {Roma, Italy},
  url =          {http://robotics.unibg.it/tcsoft/sdir2007/},
  abstract =     {As an emerging research field, robot software
                  development is generating a growing body of
                  scientific literature and industrial
                  developments. Nevertheless, the field is still
                  characterized by the lack of a sound and
                  comprehensive body of concepts that has been widely
                  adopted. As a consequence, it is rather difficult to
                  understand, assess, and compare the existing
                  approaches. In turn, this limits our ability to
                  fully exploit them in practice, and to further
                  promote the research work on robot software
                  development.  The second edition of the workshop
                  will be more focused on analyzing concepts to
                  understand and compare robot software systems and on
                  identifying criteria and guidelines that support the
                  developer in the design of robot software
                  architectures.},
}

