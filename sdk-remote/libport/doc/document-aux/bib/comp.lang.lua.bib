@String{j-jucs = "Journal of Universal Computer Science"}

@article{ierusalimschy.96.spe,
  author =       {Ierusalimschy, Roberto and de Figueiredo, Luiz
                  Henrique and Filho, Waldemar Celes},
  title =        {Lua --- an extensible extension language},
  journal =      {Softw. Pract. Exper.},
  volume =       {26},
  number =       {6},
  year =         {1996},
  issn =         {0038-0644},
  pages =        {635--652},
  doi =
                  {http://dx.doi.org/10.1002/(SICI)1097-024X(199606)26:6<635::AID-SPE26>3.0.CO;2-P},
  publisher =    {John Wiley \& Sons, Inc.},
  address =      {New York, NY, USA},
  abstract =     {This paper describes Lua, a language for extending
                  applications. Lua combines procedural features with
                  powerful data description facilities, by using a
                  simple, yet powerful, mechanism of tables. This
                  mechanism implements the concepts of records,
                  arrays, and recursive data types (pointers), and
                  adds some object-oriented facilities, such as
                  methods with dynamic dispatching.  Lua presents a
                  mechanism of fallbacks that allows programmers to
                  extend the semantics of the language in some
                  unconventional ways. As a noteworthy example,
                  fallbacks allow the user to add different kinds of
                  inheritance to the language.  Currently, Lua is
                  being extensively used in production for several
                  tasks, including user configuration, general-purpose
                  data-entry, description of user interfaces, storage
                  of structured graphical metafiles, and generic
                  attribute configuration for finite element meshes.}
}

@Article{moura.04.jucs,
  author =       {A. L\'ucia de Moura and N. Rodriguez and
                  R. Ierusalimschy},
  title =        {Coroutines in {Lua}},
  abstract =     {After a period of oblivion, a renewal of interest in
                  coroutines is being observed. However, most current
                  implementations of coroutine mechanisms are
                  restricted, and motivated by particular uses. The
                  convenience of providing true coroutines as a
                  general control abstraction is disregarded. This
                  paper presents and discusses the coroutine
                  facilities provided by the language Lua, a full
                  implementation of the concept of asymmetric
                  coroutines. It also shows that this powerful
                  construct supports easy and succint implementations
                  of useful control behaviors.},
  journal =      j-jucs,
  year =         {2004},
  volume =       {10},
  number =       {7},
  pages =        {910--925},
  month =        {July},
  note =
                  {\url|http://www.jucs.org/jucs%5F10%5F7/coroutines%5Fin%5Flua|}
}
