##                                                         -*- shell-script -*-
## rst.as: This file is part of build-aux.
## Copyright (C) 2006-2010, Gostai S.A.S.
##
## This software is provided "as is" without warranty of any kind,
## either expressed or implied, including but not limited to the
## implied warranties of fitness for a particular purpose.
##
## See the LICENSE file for more information.
## For comments, bug reports and feedback: http://www.urbiforge.com
##



## --------------- ##
## Rst functions.  ##
## --------------- ##

# These functions produce their result on stdout.

m4_defun([_URBI_RST_PREPARE],
[# rst_title TITLE
# ---------------
rst_title ()
{
   echo "$[@]" | sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
}

# rst_section_ LINER TITLE
# ------------------------
rst_section_ ()
{
   local liner="$[1]"
   shift
   echo "$[@]" | sed "p;s/./$liner/g;p;g"
   echo
}

# rst_section TITLE
# -----------------
rst_section ()
{
  rst_section_ "=" "$[@]"
}

# rst_subsection TITLE
# --------------------
rst_subsection ()
{
  rst_section_ "-" "$[@]"
}

# rst_subsubsection TITLE
# -----------------------
rst_subsubsection ()
{
  rst_section_ "." "$[@]"
}

# rst_tab [FILES = stdin]
# -----------------------
rst_tab ()
{
  # We use "cat -v" so that we don't miss hidden characters, but
  # also so Windows runs don't display with an empty line between
  # one line.  They now display as "LINE^M".
  cat -v "$[@]" | perl -pe 's/\^\@<:@\@<:@33/\x1B\@<:@33/g;s/^/\t/'
  echo
}

# rst_pre TITLE [FILE]
# --------------------
# FILE may be empty to denote stdin.
rst_pre ()
{
  if test $[#] -eq 1 || test -s "$[2]"; then
    echo "$[1]::"
    echo
    shift
    rst_tab "$[@]"
  fi
}


# rst_expect EXPECTED EFFECTIVE [DIFF-FLAGS]
# ------------------------------------------
# Compare expected output with effective, actual, output.
# Set $exit to false if there is a failure.
rst_expect ()
{
  local exp=$[1]
  local eff=$[2]
  shift 2
  rst_subsubsection "$me: $effective"
  # Dump something, it is really surprising in the logs to see
  # nothing.
  rst_pre "Expected $exp for $me"      $exp.exp
  rst_pre "Raw $eff for $me"           $eff.raw

  test -f $exp.exp ||
    fatal "missing reference file: $exp.exp"

  # --strip-trailing-cr helps to fight \r.
  if ! diff --strip-trailing-cr -u                              \
            --label="Expected $exp ($exp.exp)"  $exp.exp        \
            --label="Effective $exp ($eff.eff)" $eff.eff        \
            "$[@]"                                              \
            >$eff.diff; then
    rst_pre "Effective $eff for $me"   $eff.eff
    rst_pre "Diffs on $eff for $me"    $eff.diff
    # If exit is already set, e.g. to "exit SKIP", don't alter it.
    case $exit in
      ('' | true) exit=false;;
    esac
  fi
}
])

m4_defun([URBI_RST_PREPARE],
[m4_divert_text([M4SH-INIT], [_URBI_RST_PREPARE])])
