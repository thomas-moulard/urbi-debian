syncline << "doc/specs/pattern.tex:20";
[01234567:syncline] "doc/specs/pattern.tex:20"
//#line 20 "doc/specs/pattern.tex"
[1, var a, var b] = [1, 2, 3];
[00000000] [1, 2, 3]
a;
[00000000] 2
b;
[00000000] 3

syncline << "doc/specs/pattern.tex:39";
[01234567:syncline] "doc/specs/pattern.tex:39"
//#line 39 "doc/specs/pattern.tex"
Pattern.new([1]); // create a pattern to match the list [1].
[00000000] Pattern_0x189ea80
Pattern.new(Pattern.Binding.new("a")); // match anything into "a".
[00000000] Pattern_0x18d98b0

syncline << "doc/specs/pattern.tex:53";
[01234567:syncline] "doc/specs/pattern.tex:53"
//#line 53 "doc/specs/pattern.tex"
Pattern.Binding.new("a");
[00000000] var a

syncline << "doc/specs/pattern.tex:63";
[01234567:syncline] "doc/specs/pattern.tex:63"
//#line 63 "doc/specs/pattern.tex"
{
  var p = Pattern.new([Pattern.Binding.new("a"), Pattern.Binding.new("b")]);
  assert (p.match([1, 2]));
  p.bindings
};
[00000000] ["a" => 1, "b" => 2]

syncline << "doc/specs/pattern.tex:86";
[01234567:syncline] "doc/specs/pattern.tex:86"
//#line 86 "doc/specs/pattern.tex"
assert {
Pattern.new(1).match(1);
Pattern.new([1, 2]).match([1, 2]);
! Pattern.new([1, 2]).match([1, 3]);
! Pattern.new([1, 2]).match([1, 2, 3]);
Pattern.new(Pattern.Binding.new("a")).match(0);
Pattern.new([1, Pattern.Binding.new("a")]).match([1, 2]);
! Pattern.new([1, Pattern.Binding.new("a")]).match(0);
};

syncline << "doc/specs/pattern.tex:117";
[01234567:syncline] "doc/specs/pattern.tex:117"
//#line 117 "doc/specs/pattern.tex"
assert {
Pattern.new(1).pattern == 1;
Pattern.new([1, 2]).pattern == [1, 2];
{
  var pattern = [1, Pattern.Binding.new("a")];
  Pattern.new(pattern).pattern === pattern
};
};
