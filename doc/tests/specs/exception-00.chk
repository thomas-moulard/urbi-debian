syncline << "doc/specs/exception.tex:35";
[01234567:syncline] "doc/specs/exception.tex:35"
//#line 35 "doc/specs/exception.tex"
Exception.new("something bad has happened!");
[00000001] Exception `something bad has happened!'
Exception.Arity.new("myRoutine", 1, 10, 23);
[00000002] Exception.Arity `myRoutine: expected between 10 and 23 arguments, given 1'

syncline << "doc/specs/exception.tex:52";
[01234567:syncline] "doc/specs/exception.tex:52"
//#line 52 "doc/specs/exception.tex"
//#push 1 "file.u"
try
{
  function innermost () { throw Exception.new("Ouch") };
  function inner     () { innermost() };
  function outer     () { inner() };
  function outermost () { outer() };

  outermost();
}
catch (var e)
{
  assert
  {
    e.backtrace[0].location.asString == "file.u:4.27-37";
    e.backtrace[0].name == "innermost";

    e.backtrace[1].location.asString == "file.u:5.27-33";
    e.backtrace[1].name == "inner";

    e.backtrace[2].location.asString == "file.u:6.27-33";
    e.backtrace[2].name == "outer";

    e.backtrace[3].location.asString == "file.u:8.3-13";
    e.backtrace[3].name == "outermost";
  };
};
//#pop

syncline << "doc/specs/exception.tex:85";
[01234567:syncline] "doc/specs/exception.tex:85"
//#line 85 "doc/specs/exception.tex"
eval("1/0");
[00090441:error] !!! 1.1-3: /: division by 0
[00090441:error] !!!    called from: eval
try
{
  eval("1/0");
}
catch (var e)
{
  assert (e.location.asString == "1.1-3");
};

syncline << "doc/specs/exception.tex:100";
[01234567:syncline] "doc/specs/exception.tex:100"
//#line 100 "doc/specs/exception.tex"
assert {
Exception.new("Ouch").message == "Ouch";
};

syncline << "doc/specs/exception.tex:116";
[01234567:syncline] "doc/specs/exception.tex:116"
//#line 116 "doc/specs/exception.tex"
Exception.ArgumentType.new("myRoutine", 1, "hisResult", "Expectation");
[00000003] Exception.ArgumentType `myRoutine: unexpected "hisResult" for argument 1, expected a String'

syncline << "doc/specs/exception.tex:125";
[01234567:syncline] "doc/specs/exception.tex:125"
//#line 125 "doc/specs/exception.tex"
Exception.Arity.new("myRoutine", 1, 10, 23);
[00000004] Exception.Arity `myRoutine: expected between 10 and 23 arguments, given 1'

syncline << "doc/specs/exception.tex:142";
[01234567:syncline] "doc/specs/exception.tex:142"
//#line 142 "doc/specs/exception.tex"
Exception.BadInteger.new("myRoutine", "bad integer: %s", 12);
[00000005] Exception.BadInteger `myRoutine: bad integer: 12'

syncline << "doc/specs/exception.tex:151";
[01234567:syncline] "doc/specs/exception.tex:151"
//#line 151 "doc/specs/exception.tex"
Exception.BadNumber.new("myRoutine", "bad number: %s", 12.34);
[00000005] Exception.BadNumber `myRoutine: bad number: 12.34'

syncline << "doc/specs/exception.tex:158";
[01234567:syncline] "doc/specs/exception.tex:158"
//#line 158 "doc/specs/exception.tex"
Exception.Constness.new;
[00000006] Exception.Constness `cannot modify const slot'

syncline << "doc/specs/exception.tex:165";
[01234567:syncline] "doc/specs/exception.tex:165"
//#line 165 "doc/specs/exception.tex"
Exception.FileNotFound.new("foo");
[00000007] Exception.FileNotFound `file not found: foo'

syncline << "doc/specs/exception.tex:173";
[01234567:syncline] "doc/specs/exception.tex:173"
//#line 173 "doc/specs/exception.tex"
Exception.ImplicitTagComponent.new;
[00000008] Exception.ImplicitTagComponent `invalid component in implicit tag'

syncline << "doc/specs/exception.tex:183";
[01234567:syncline] "doc/specs/exception.tex:183"
//#line 183 "doc/specs/exception.tex"
Exception.Lookup.new(Object, "GetSlot");
[00000009] Exception.Lookup `lookup failed: Object'

syncline << "doc/specs/exception.tex:190";
[01234567:syncline] "doc/specs/exception.tex:190"
//#line 190 "doc/specs/exception.tex"
Exception.MatchFailure.new;
[00000010] Exception.MatchFailure `pattern did not match'

syncline << "doc/specs/exception.tex:198";
[01234567:syncline] "doc/specs/exception.tex:198"
//#line 198 "doc/specs/exception.tex"
Exception.NegativeNumber.new("myRoutine", -12);
[00000005] Exception.NegativeNumber `myRoutine: expected non-negative number, got -12'

syncline << "doc/specs/exception.tex:206";
[01234567:syncline] "doc/specs/exception.tex:206"
//#line 206 "doc/specs/exception.tex"
Exception.NonPositiveNumber.new("myRoutine", -12);
[00000005] Exception.NonPositiveNumber `myRoutine: expected positive number, got -12'

syncline << "doc/specs/exception.tex:214";
[01234567:syncline] "doc/specs/exception.tex:214"
//#line 214 "doc/specs/exception.tex"
Exception.Primitive.new("myRoutine", "cannot do that");
[00000011] Exception.Primitive `myRoutine: cannot do that'

syncline << "doc/specs/exception.tex:221";
[01234567:syncline] "doc/specs/exception.tex:221"
//#line 221 "doc/specs/exception.tex"
Exception.Redefinition.new("foo");
[00000012] Exception.Redefinition `slot redefinition: foo'

syncline << "doc/specs/exception.tex:228";
[01234567:syncline] "doc/specs/exception.tex:228"
//#line 228 "doc/specs/exception.tex"
Exception.Scheduling.new("cannot schedule");
[00000013] Exception.Scheduling `cannot schedule'

syncline << "doc/specs/exception.tex:242";
[01234567:syncline] "doc/specs/exception.tex:242"
//#line 242 "doc/specs/exception.tex"
Exception.Syntax.new(Location.new(Position.new("file.u", 14, 25)),
                     "unexpected pouCharque", "file.u");
[00000013] Exception.Syntax `file.u:14.25: syntax error: unexpected pouCharque'

try
{
  eval("1 / / 0");
}
catch (var e)
{
  assert
  {
    e.isA(Exception.Syntax);
    e.loc.asString == "1.5";
    e.input == "1 / / 0";
    e.message == "unexpected /";
  }
};

syncline << "doc/specs/exception.tex:267";
[01234567:syncline] "doc/specs/exception.tex:267"
//#line 267 "doc/specs/exception.tex"
Exception.Type.new("hisResult", "Expectation");
[00000014] Exception.Type `unexpected "hisResult", expected a String'

syncline << "doc/specs/exception.tex:274";
[01234567:syncline] "doc/specs/exception.tex:274"
//#line 274 "doc/specs/exception.tex"
Exception.UnexpectedVoid.new;
[00000015] Exception.UnexpectedVoid `unexpected void'
var a = void;
a;
[00000016:error] !!! unexpected void
[00000017:error] !!! lookup failed: a
