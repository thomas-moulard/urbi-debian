syncline << "doc/specs/kernel1.tex:38";
[01234567:syncline] "doc/specs/kernel1.tex:38"
//#line 38 "doc/specs/kernel1.tex"
// copy.
var a = BIN 10;0123456789
[00000001] BIN 10
[:]0123456789

var b = Kernel1.copy(a);
[00000003:warning] *** `copy(binary)' is deprecated, use `binary.copy'
[00000004] BIN 10
[:]0123456789

echo (b);
[00000005] *** BIN 10
[:]0123456789

syncline << "doc/specs/kernel1.tex:72";
[01234567:syncline] "doc/specs/kernel1.tex:72"
//#line 72 "doc/specs/kernel1.tex"
Kernel1.ping;
[00000421] *** pong time=0.12s

syncline << "doc/specs/kernel1.tex:90";
[01234567:syncline] "doc/specs/kernel1.tex:90"
//#line 90 "doc/specs/kernel1.tex"
assert {
Kernel1.size([1, 2, 3]) == [1, 2, 3].size;
[00000002:warning] *** `size(list)' is deprecated, use `list.size'
};

syncline << "doc/specs/kernel1.tex:101";
[01234567:syncline] "doc/specs/kernel1.tex:101"
//#line 101 "doc/specs/kernel1.tex"
assert {
Kernel1.strlen("123") == "123".length;
[00000002:warning] *** `strlen(string)' is deprecated, use `string.length'
};
