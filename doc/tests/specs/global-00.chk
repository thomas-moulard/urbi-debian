syncline << "doc/specs/global.tex:35";
[01234567:syncline] "doc/specs/global.tex:35"
//#line 35 "doc/specs/global.tex"
cerr << "Message";
[00015895:error] Message
cerr << "\"quote\"";
[00015895:error] "quote"

syncline << "doc/specs/global.tex:46";
[01234567:syncline] "doc/specs/global.tex:46"
//#line 46 "doc/specs/global.tex"
clog << "Message";
[00015895:clog] "Message"

syncline << "doc/specs/global.tex:56";
[01234567:syncline] "doc/specs/global.tex:56"
//#line 56 "doc/specs/global.tex"
cout << "Message";
[00015895:output] "Message"
cout << "\"quote\"";
[00015895:output] "\"quote\""

syncline << "doc/specs/global.tex:78";
[01234567:syncline] "doc/specs/global.tex:78"
//#line 78 "doc/specs/global.tex"
echo("111", "foo");
[00015895:foo] *** 111
echo(222, "");
[00051909] *** 222
echo(333);
[00055205] *** 333

syncline << "doc/specs/global.tex:98";
[01234567:syncline] "doc/specs/global.tex:98"
//#line 98 "doc/specs/global.tex"
assert {
(evaluate = "1+2;") == "1+2;";
 evaluate == 3;
{ evaluate = "1+2;" | evaluate } == 3;
{ evaluate = "var x = 1;"; x } == 1;
};

syncline << "doc/specs/global.tex:107";
[01234567:syncline] "doc/specs/global.tex:107"
//#line 107 "doc/specs/global.tex"
evaluate = "1/0;";
[00087671:error] !!! Exception caught while processing notify on Global.evaluate:
[00087671:error] !!! 1.1-3: /: division by 0
[00087671:error] !!!    called from: updateSlot
[00087671] "1/0;"

syncline << "doc/specs/global.tex:142";
[01234567:syncline] "doc/specs/global.tex:142"
//#line 142 "doc/specs/global.tex"
assert
{
  !isdef(a);
  !isdef(a.b);
  !isdef(a.b.c);
};

var a = Object.new|;
assert
{
   isdef(a);
  !isdef(a.b);
  !isdef(a.b.c);
};

var a.b = Object.new|;
assert
{
   isdef(a);
   isdef(a.b);
  !isdef(a.b.c);
};

var a.b.c = Object.new|;
assert
{
   isdef(a);
   isdef(a.b);
   isdef(a.b.c);
};

syncline << "doc/specs/global.tex:187";
[01234567:syncline] "doc/specs/global.tex:187"
//#line 187 "doc/specs/global.tex"
var uid_of = methodToFunction("uid")|;
assert
{
  uid_of(Object) == Object.uid;
  uid_of(Global) == Global.uid;
};
var '+_of' = methodToFunction("+")|;
assert
{
  '+_of'( 1,   2)  ==  1  + 2;
  '+_of'("1", "2") == "1" + "2";
  '+_of'([1], [2]) == [1] + [2];
};

syncline << "doc/specs/global.tex:247";
[01234567:syncline] "doc/specs/global.tex:247"
//#line 247 "doc/specs/global.tex"
wall("111", "foo");
[00015895:foo] *** 111
wall(222, "");
[00051909] *** 222
wall(333);
[00055205] *** 333

syncline << "doc/specs/global.tex:258";
[01234567:syncline] "doc/specs/global.tex:258"
//#line 258 "doc/specs/global.tex"
warn("cave canem");
[00015895:warning] *** cave canem
