// Void alone.
void;

// Void to avoid the display of a value.
1 | {};

// A function returning void.
var f = function() {} | {};

var h = function(x) {"ok".print;void;} | {};

h(1);
[00000001] "ok"
h(f);
[00000002:error] !!! input.u:14.1-4: unexpected void
var i = f;
[00000003:error] !!! input.u:16.5: unexpected void
1+f;
[00000004:error] !!! input.u:18.1-3: unexpected void
echo("foo").uid;
[00000005] *** foo
[00000006:error] !!! input.u:20.1-15: unexpected void

// Test that the location is correct (innermost).
var j = function()
{
  this . h(this . f)
} | {};
j;
[00000007:error] !!! input.u:27.3-20: unexpected void
[00000008:error] !!!    called from: input.u:29.1: j

// Check that "return" returns Void, instead of a null pointer
// that crashes the system.
function nada() { return } | {};
nada;

// Check void cannot be included in literal lists
[void];
[00000009:error] !!! input.u:39.1-6: unexpected void

f: 1;
[00000010:error] !!! input.u:42.1-4: unexpected void

